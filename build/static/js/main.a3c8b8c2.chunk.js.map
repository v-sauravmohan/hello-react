{"version":3,"sources":["index.js"],"names":["lakeList","id","name","organizedBy","LakesChapter","lakes","map","lake","StateChapter","useState","year","setYear","onClick","Checkbox","checked","setChecked","useEffect","console","log","toString","type","value","onChange","MulltipleSetStates","setName","phonenumber","setPhoneNumber","e","target","GitHubUser","userName","data","setData","fetch","then","res","json","catch","error","src","avatar_url","alt","width","CheckboxWithReducer","useReducer","toggleChecked","App","class","ReactDOM","render","document","getElementById"],"mappings":"qLAIMA,G,MAAW,CACf,CAAEC,GAAI,QAASC,KAAM,kBAAmBC,YAAa,qBACrD,CACEF,GAAI,UACJC,KAAM,2BACNC,YAAa,kBAEf,CACEF,GAAI,YACJC,KAAM,wBACNC,YAAa,8BAIjB,SAASC,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACtB,OACE,8BACE,+BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,gCACE,6BAAKA,EAAKL,OACV,8CAAiBK,EAAKJ,YAAtB,SAFQI,EAAKN,WAUzB,SAASO,IAAgB,IAAD,EACEC,mBAAS,MADX,mBACfC,EADe,KACTC,EADS,KAGtB,OACE,mCACE,gCACE,6BAAKD,IACL,wBAAQE,QAAS,kBAAMD,EAAQD,EAAO,IAAtC,eACA,wBAAQE,QAAS,kBAAMD,EAAQD,EAAO,IAAtC,iBAHO,kBASf,SAASG,IAAY,IAAD,EACYJ,oBAAS,GADrB,mBACXK,EADW,KACFC,EADE,KAOlB,OAJAC,qBAAU,WACRC,QAAQC,IAAR,mBAAwBJ,EAAQK,gBAIhC,qCACE,uBACEC,KAAK,WACLC,MAAOP,EACPA,QAASA,EACTQ,SAAU,kBAAMP,GAAW,SAACD,GAAD,OAAcA,QAE1CA,EAAU,UAAY,iBAK7B,SAASS,IAAsB,IAAD,EACJd,mBAAS,IADL,mBACrBP,EADqB,KACfsB,EADe,OAEUf,mBAAS,IAFnB,mBAErBgB,EAFqB,KAERC,EAFQ,KAY5B,OARAV,qBAAU,WACRC,QAAQC,IAAR,eAAoBhB,MACnB,CAACA,IAEJc,qBAAU,WACRC,QAAQC,IAAR,sBAA2BO,MAC1B,CAACA,IAGF,qCACE,iCACE,2CACA,uBACEL,KAAK,OAELE,SAAU,SAACK,GAAD,OAAOH,EAAQG,EAAEC,OAAOP,SAD9B,WAIR,uBACA,iCACE,kDACA,uBACED,KAAK,OAELE,SAAU,SAACK,GAAD,OAAOD,EAAeC,EAAEC,OAAOP,SADrC,qBAQd,SAASQ,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAAY,EAERrB,mBAAS,MAFD,mBAEzBsB,EAFyB,KAEnBC,EAFmB,KAWhC,OAPAhB,qBAAU,WACRiB,MAAM,gCAAD,OAAiCH,IACrCI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,KAAKF,GACLK,MAAMpB,QAAQqB,SACf,CAACR,IAGD,qCACE,gEACA,gCACE,oCAAKC,QAAL,IAAKA,OAAL,EAAKA,EAAM7B,OACX,qBAAKqC,IAAG,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAMS,WAAYC,IAAI,cAAcC,MAAM,cAM5D,SAASC,IAAuB,IAAD,EAEIC,sBAAW,SAAA9B,GAAO,OAAKA,KAAS,GAFpC,mBAEtBA,EAFsB,KAEb+B,EAFa,KAI7B,OACE,qCACE,wDACA,uBACEzB,KAAK,WACLC,MAAOP,EACPA,QAASA,EACTQ,SAAUuB,IAEX/B,EAAU,UAAY,iBAK7B,SAASgC,IACP,OACE,qCACE,cAACH,EAAD,IACA,oBAAII,MAAM,UACV,cAAClB,EAAD,CAAYC,SAAS,kBACrB,oBAAIiB,MAAM,UACV,cAACxB,EAAD,IACA,oBAAIwB,MAAM,UACV,uBACA,cAAClC,EAAD,IACA,oBAAIkC,MAAM,UACV,cAACvC,EAAD,IACA,oBAAIuC,MAAM,UACV,cAAC3C,EAAD,CAAcC,MAAOL,OAK3BgD,IAASC,OAAO,cAACH,EAAD,IAASI,SAASC,eAAe,W","file":"static/js/main.a3c8b8c2.chunk.js","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst lakeList = [\n  { id: \"lake1\", name: \"Vembanad Cruise\", organizedBy: \"Untitled Emotions\" },\n  {\n    id: \"desert1\",\n    name: \"Jaisalmeer Dune Smashing\",\n    organizedBy: \"Haris Amir Ali\",\n  },\n  {\n    id: \"himalaya1\",\n    name: \"Srinagar Ka Taza Swas\",\n    organizedBy: \"Sujith Bhakthan And Bros\",\n  },\n];\n\nfunction LakesChapter({ lakes }) {\n  return (\n    <div>\n      <span>\n        {lakes.map((lake) => (\n          <div key={lake.id}>\n            <h1>{lake.name}</h1>\n            <p>Organized By {lake.organizedBy} </p>\n          </div>\n        ))}\n      </span>\n    </div>\n  );\n}\n\nfunction StateChapter() {\n  const [year, setYear] = useState(2020);\n\n  return (\n    <>\n      <div key=\"yearSelecter\">\n        <h1>{year}</h1>\n        <button onClick={() => setYear(year + 1)}>+</button>\n        <button onClick={() => setYear(year - 1)}>-</button>\n      </div>\n    </>\n  );\n}\n\nfunction Checkbox() {\n  const [checked, setChecked] = useState(true);\n\n  useEffect(() => {\n    console.log(`checked: ${checked.toString()}`);\n  });\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        value={checked}\n        checked={checked}\n        onChange={() => setChecked((checked) => !checked)}\n      />\n      {checked ? \"Checked\" : \"Not Checked\"}\n    </>\n  );\n}\n\nfunction MulltipleSetStates() {\n  const [name, setName] = useState(\"\");\n  const [phonenumber, setPhoneNumber] = useState(\"\");\n\n  useEffect(() => {\n    console.log(`Name ${name}`);\n  }, [name]);\n\n  useEffect(() => {\n    console.log(`Phonenumber ${phonenumber}`);\n  }, [phonenumber]);\n\n  return (\n    <>\n      <span>\n        <label>Name: </label>\n        <input\n          type=\"text\"\n          key=\"Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </span>\n      <br />\n      <span>\n        <label>Phonenumber: </label>\n        <input\n          type=\"text\"\n          key=\"PhoneNumber\"\n          onChange={(e) => setPhoneNumber(e.target.value)}\n        />\n      </span>\n    </>\n  );\n}\n\nfunction GitHubUser({ userName }) {\n\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(`https://api.github.com/users/${userName}`)\n    .then((res) => res.json())\n    .then(setData)\n    .catch(console.error);\n  },[userName]);\n\n  return(\n    <>\n      <h1>Fetch From API using useEffect</h1>\n      <div>\n        <h1>{data?.name}</h1>\n        <img src={data?.avatar_url} alt=\"User Avatar\" width='100'/>\n      </div>\n    </>\n  )\n}\n\nfunction CheckboxWithReducer() {\n\n  const [checked, toggleChecked] = useReducer(checked => !checked, false);\n\n  return (\n    <>\n      <h1>Checkbox using Reducer</h1>\n      <input\n        type=\"checkbox\"\n        value={checked}\n        checked={checked}\n        onChange={toggleChecked}\n      />\n      {checked ? \"Checked\" : \"Not Checked\"}\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <>\n      <CheckboxWithReducer ></CheckboxWithReducer>\n      <hr class=\"solid\" />\n      <GitHubUser userName=\"v-sauravmohan\" ></GitHubUser>\n      <hr class=\"solid\" />\n      <MulltipleSetStates></MulltipleSetStates>\n      <hr class=\"solid\" />\n      <br />\n      <Checkbox></Checkbox>\n      <hr class=\"solid\" />\n      <StateChapter></StateChapter>\n      <hr class=\"solid\" />\n      <LakesChapter lakes={lakeList}></LakesChapter>\n    </>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}